{"ast":null,"code":"var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, action } from \"mobx\";\nlet Store = (_class = (_temp = class Store {\n  constructor() {\n    _initializerDefineProperty(this, \"storedFetchData\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"storedWishMoney\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"storedWishYear\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"flag\", _descriptor4, this);\n  }\n\n  setData(storedFetchData) {\n    this.storedFetchData = storedFetchData;\n  }\n\n  setWishMoney(wishMoney) {\n    this.storedWishMoney = wishMoney;\n  }\n\n  setWishYear(wishYear) {\n    this.storedWishYear = wishYear;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"storedFetchData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"storedWishMoney\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '0';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"storedWishYear\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '0';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"flag\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setData\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setWishMoney\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setWishMoney\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setWishYear\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setWishYear\"), _class.prototype)), _class);\nexport default new Store();","map":{"version":3,"sources":["/Users/lucas/git/etri_media/hedge_front_end/common/store.js"],"names":["observable","action","Store","setData","storedFetchData","setWishMoney","wishMoney","storedWishMoney","setWishYear","wishYear","storedWishYear"],"mappings":";;;;;;;;AAAA,SAAQA,UAAR,EAAmBC,MAAnB,QAAgC,MAAhC;IAEMC,K,sBAAN,MAAMA,KAAN,CAAY;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAURC,EAAAA,OADA,CACQC,eADR,EACwB;AACpB,SAAKA,eAAL,GAAuBA,eAAvB;AACH;;AAIDC,EAAAA,YADA,CACaC,SADb,EACuB;AACnB,SAAKC,eAAL,GAAuBD,SAAvB;AACH;;AAGDE,EAAAA,WADA,CACYC,QADZ,EACqB;AACjB,SAAKC,cAAL,GAAsBD,QAAtB;AACH;;AAvBO,C,yFAEPT,U;;;;;WAA6B,E;;mFAE7BA,U;;;;;WAA6B,G;;kFAC7BA,U;;;;;WAA4B,G;;wEAE5BA,U;;;;;WAAkB,I;;4DAElBC,M,iJAMAA,M,qJAKAA,M;AAQL,eAAgB,IAAIC,KAAJ,EAAhB","sourcesContent":["import {observable,action} from \"mobx\";\n\nclass Store {\n\n    @observable storedFetchData = {} ;\n\n    @observable storedWishMoney = '0';\n    @observable storedWishYear = '0';\n\n    @observable flag = true;\n\n    @action\n    setData(storedFetchData){\n        this.storedFetchData = storedFetchData;\n    }\n\n\n    @action\n    setWishMoney(wishMoney){\n        this.storedWishMoney = wishMoney;\n    }\n\n    @action\n    setWishYear(wishYear){\n        this.storedWishYear = wishYear;\n    }\n\n\n}\n\nexport default (new Store);"]},"metadata":{},"sourceType":"module"}